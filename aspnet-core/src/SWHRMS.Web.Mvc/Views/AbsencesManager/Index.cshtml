@using SWHRMS.Web.Startup
@model SWHRMS.Web.Models.Absence.AbsenceManagerViewModel

@{
    ViewBag.CurrentPageName = PageNames.AbsenceManage; // The menu item will be active for this page.

    var getDate = DateTime.Now;
    var firstDayOfTheMonth = new DateTime(getDate.Year, getDate.Month, 1);
    var firstDayOfNextMonth = firstDayOfTheMonth.AddMonths(1);
    var daysOffList = new List<string> { "Sunday", "Saturday" };
    DateTime startDate = firstDayOfTheMonth.AddDays(-(int)firstDayOfTheMonth.DayOfWeek);
}
@section styles {
    <link href="~/lib/morris.js/morris.css" rel="stylesheet" asp-append-version="true" />
    <style>
        .table td, .table th {
            min-width: 50px;
        }
    </style>
}
@section scripts
{
    <environment names="Development">
        <script src="~/view-resources/Views/AbsenceManage/Index.js" asp-append-version="true"></script>
    </environment>

    <environment names="Staging,Production">
        <script src="~/view-resources/Views/_Bundles/absencemanage-index.min.js" asp-append-version="true"></script>
    </environment>
}

<div class="block-header">
    <h2>@L("AbsenceManageSection")</h2>
</div>
<div class="row clearfix">
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <div class="card" id="absenceManageTable">
            <div class="header bg-unique-dark">
                <h2>
                    @L("AbsenceDetails")
                </h2>
                <ul class="header-dropdown m-r--5">
                    <li class="dropdown">
                        <a href="javascript:void(0);" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">
                            <i class="material-icons">more_vert</i>
                        </a>
                        <ul class="dropdown-menu pull-right">
                            <li><a id="RefreshButton" href="javascript:void(0);" class="waves-effect waves-block"><i class="material-icons">refresh</i>@L("Refresh")</a></li>
                        </ul>
                    </li>
                </ul>
            </div>
            <div class="body">
                <table class="table table-hover" id="jtable" style="width:100%">
                    <thead>
                        <tr>
                            <th>@L("FullName")</th>
                            <th>@L("EmployeeCode")</th>
                            <th>@L("Branch")</th>
                            <th>@L("Reason")</th>
                            @*<th>@L("BookDate")</th>*@
                            <th>@L("StartDate")</th>
                            <th>@L("EndDate")</th>
                            <th class="align-center">@L("Status")</th>
                            <th class="align-center">@L("Approval")</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var absence in Model.Absences)
                        {
                            <tr id="row_@absence.Id">
                                <td>@(absence.User != null ? absence.User.FullName : "")</td>
                                <td>@(absence.User != null ? absence.User.UserName : "")</td>
                                <td>@(absence.User != null ? (absence.User.Branch != null ? absence.User.Branch.Name : "") : "")</td>
                                <td>@absence.Details</td>
                                @*<td>@absence.CreationTime</td>*@
                                <td>@absence.StartDate</td>
                                <td>@absence.EndDate</td>
                                <td class="align-center">
                                    <div class="absence-status" id="absencestatus">
                                        <i class="material-icons" style="color:@(absence.Status == 0 ? "":absence.Status == 1 ? "green":"red");">@(absence.Status != 0 ? "check_box" : "indeterminate_check_box")</i>
                                    </div>
                                </td>
                                <td class="align-center">
                                    <div class="btn-group" role="group">
                                        <button type="button" class="btn btn-transparent waves-effect" id="approve-absence" data-absence-id="@absence.Id"><i class="material-icons">thumb_up</i></button>
                                        <button type="button" class="btn btn-transparent waves-effect" id="disapprove-absence" data-absence-id="@absence.Id"><i class="material-icons">thumb_down</i></button>
                                        <button type="button" class="btn btn-transparent waves-effect" id="delete-absence" data-absence-id="@absence.Id"><i class="material-icons">delete_sweep</i></button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<div class="row clearfix">
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <div class="card">
            <div class="header bg-unique-dark">
                <h2>
                    @L("UserAbsenceDetails")
                </h2>
                <ul class="header-dropdown m-r--5">
                    <li class="dropdown">
                        <a href="javascript:void(0);" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">
                            <i class="material-icons">more_vert</i>
                        </a>
                        <ul class="dropdown-menu pull-right">
                            <li><a id="RefreshButton" href="javascript:void(0);" class="waves-effect waves-block"><i class="material-icons">refresh</i>@L("Refresh")</a></li>
                        </ul>
                    </li>
                </ul>
            </div>
            <div class="body table-responsive" id="userAbsenceTable">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>@L("FullName")</th>
                            <th>@L("EmployeeCode")</th>
                            <th>@L("Branch")</th>
                            <th>@L("DaysAbsent")</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var user in Model.Users)
                        {
                            <tr>
                                <td>@user.FullName</td>
                                <td>@user.UserName</td>
                                <td>@(user.Branch != null ? user.Branch.Name : "")</td>
                                <td>@(user.DaysAbsent != null ? user.DaysAbsent : 0)</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<div class="block-header">
    <h2>@L("BookingInfo")</h2>
</div>
<div class="row clearfix">
    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
        <div class="card">
            <div class="header bg-unique-dark">
                <h2>
                    @L("AbsenceCalendar")
                </h2>
                <ul class="header-dropdown m-r--5">
                    <li class="dropdown">
                        <a href="javascript:void(0);" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">
                            <i class="material-icons">more_vert</i>
                        </a>
                        <ul class="dropdown-menu pull-right">
                            <li><a id="RefreshButton" href="javascript:void(0);" class="waves-effect waves-block"><i class="material-icons">refresh</i>@L("Refresh")</a></li>
                        </ul>
                    </li>
                </ul>
            </div>
            <div class="body table-responsive" id="absenceCalendar">
                <table class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th style="text-align:center">@firstDayOfTheMonth.Month / @firstDayOfTheMonth.Year</th>
                            @for (int i = 0; i < DateTime.DaysInMonth(firstDayOfTheMonth.Year, firstDayOfTheMonth.Month); i++)
                            {
                                DateTime date = firstDayOfTheMonth.AddDays(i);
                                <th class="col-md-1" style="text-align:center; color:@(daysOffList.Contains(date.DayOfWeek.ToString()) ? "red":"");">@date.DayOfWeek.ToString().Substring(0, 3)</th>
                            }
                        </tr>
                        <tr>
                            <th>@L("FullName")</th>
                            @for (int i = 0; i < DateTime.DaysInMonth(firstDayOfTheMonth.Year, firstDayOfTheMonth.Month); i++)
                            {
                                DateTime date = firstDayOfTheMonth.AddDays(i);
                                <th class="col-md-1" style="text-align:center; color:@(daysOffList.Contains(date.DayOfWeek.ToString()) ? "red":"");">@date.Day</th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var user in Model.Users)
                        {
                            <tr>
                                <td style="max-width: 200px; white-space: nowrap;overflow: hidden; text-overflow: ellipsis;">@user.FullName</td>
                                @for (int i = 0; i < DateTime.DaysInMonth(firstDayOfTheMonth.Year, firstDayOfTheMonth.Month); i++)
                                {
                                    DateTime date = firstDayOfTheMonth.AddDays(i);
                                    @if (daysOffList.Contains(date.DayOfWeek.ToString()))
                                    {
                                        <td></td>
                                    }
                                    else
                                    {
                                        <td class="@((user.Absences.Any(x => x.StartDate <= date.AddHours(13) && x.EndDate >= date) ?
                                            (user.Absences.Any(x => x.StartDate <= date.AddHours(13) && x.EndDate >= date && x.Status == 2) ? "bg-deep-orange" :
                                            user.Absences.Any(x => x.StartDate <= date.AddHours(13) && x.EndDate >= date && x.Status == 1) ? "bg-green" : "bg-blue-grey")
                                            :""))" style="text-align:center">
                                            <i class="material-icons">
                                                @if (user.Absences.Any(x => x.StartDate <= date.AddHours(13) && x.EndDate >= date))
                                                {
                                                    @(user.Absences.Any(x => x.StartDate <= date.AddHours(13) && x.EndDate >= date && x.Status != 0) ? "check_box" : "indeterminate_check_box")
                                                }
                                                else
                                                {
                                                    @(date > DateTime.Now ? "" : "check")
                                                }
                                            </i>
                                        </td>
                                    }
                                }
                            </tr>
                        }
                    </tbody>
                </table>
                @*<table class="table table-striped table-hover">
                        <thead>
                            <tr>
                                <th style="text-align:center">@firstDayOfNextMonth.Month / @firstDayOfNextMonth.Year</th>
                                @for (int i = 0; i < DateTime.DaysInMonth(firstDayOfNextMonth.Year, firstDayOfNextMonth.Month); i++)
                                {
                                    DateTime date = firstDayOfNextMonth.AddDays(i);
                                    <th class="col-md-1" style="text-align:center; color:@(daysOffList.Contains(date.DayOfWeek.ToString()) ? "red":"");">@date.DayOfWeek.ToString().Substring(0, 3)</th>
                                }
                            </tr>
                            <tr>
                                <th>@L("FullName")</th>
                                @for (int i = 0; i < DateTime.DaysInMonth(firstDayOfNextMonth.Year, firstDayOfNextMonth.Month); i++)
                                {
                                    DateTime date = firstDayOfNextMonth.AddDays(i);
                                    <th class="col-md-1" style="text-align:center; color:@(daysOffList.Contains(date.DayOfWeek.ToString()) ? "red":"");">@date.Day</th>
                                }
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var user in Model.Users)
                            {
                                <tr>
                                    <td style="max-width: 200px; white-space: nowrap;overflow: hidden; text-overflow: ellipsis;">@user.FullName</td>
                                    @for (int i = 0; i < DateTime.DaysInMonth(firstDayOfNextMonth.Year, firstDayOfNextMonth.Month); i++)
                                    {
                                        DateTime date = firstDayOfNextMonth.AddDays(i).AddHours(12);
                                        @if (daysOffList.Contains(date.DayOfWeek.ToString()))
                                        {
                                            <td></td>
                                        }
                                        else
                                        {
                                            <td class="@((user.Absences.Any(x => x.StartDate <= date.AddHours(13) && x.EndDate >= date) ?
                                                (user.Absences.Any(x => x.StartDate <= date.AddHours(13) && x.EndDate >= date && x.Status == 2) ? "bg-deep-orange" : "bg-blue-grey"):""))" style="text-align:center">
                                                <i class="material-icons">
                                                    @if (user.Absences.Any(x => x.StartDate <= date.AddHours(13) && x.EndDate >= date))
                                                    {
                                                        @(user.Absences.Any(x => x.StartDate <= date.AddHours(13) && x.EndDate >= date && x.Status != 0) ? "check_box" : "indeterminate_check_box")
                                                    }
                                                    else
                                                    {
                                                        @(date > DateTime.Now ? "" : "check")
                                                    }
                                                </i>
                                            </td>
                                        }
                                    }
                                </tr>
                            }
                        </tbody>
                    </table>*@
            </div>
        </div>
    </div>
</div>